################################################################################
# Skills Search Backend - Environment Configuration
# ==============================================================================
# This file is a TEMPLATE - copy or auto-generate to .env
# DO NOT commit the actual .env file to version control
#
# To configure:
#   Option 1: Run ../skill-search-setup.sh (interactive, recommended)
#   Option 2: Copy this file to .env and manually edit values
#
# Configuration includes:
#   - AWS Profile settings for different services
#   - S3 Vector Bucket for embeddings search
#   - S3 Bucket for user data ingestion
#   - Search scoring parameters
#   - Display settings
################################################################################

# AWS Configuration
# ------------------------------------------------------------------------------
# General AWS profile (fallback for services that don't have specific profiles)
AWS_PROFILE=<your-aws-profile>
AWS_REGION=us-east-1

# AWS Bedrock Profile (for generating embeddings via Bedrock API)
# Used when: Generating embeddings for search queries
EMBEDDING_AWS_PROFILE=<your-bedrock-profile>
EMBEDDING_AWS_REGION=us-east-1

# AWS S3 Vectors Profile (for querying vector indexes)
# Used when: Searching vector embeddings in S3 Vector bucket
VECTOR_AWS_PROFILE=<your-s3-vectors-profile>
VECTOR_AWS_REGION=us-east-1

# AWS S3 Profile (for ingesting user data)
# Used when: Loading user data from S3 standard bucket
INGESTION_AWS_PROFILE=<your-s3-profile>
INGESTION_AWS_REGION=us-east-1

# S3 Bucket Configuration
# ------------------------------------------------------------------------------
# S3 Vector Bucket (contains skill embeddings and vector index)
# Format: skills-vectors-XXXXXXXXXX
# Created via: Skill Embeddings > Provision Vector Bucket & Index
VECTOR_BUCKET=<your-vector-bucket-name>

# S3 Standard Bucket (contains user data JSON files)
# Format: skills-selector-XXXXXXXXXX
# Created via: Skill Selector deployment
INGESTION_BUCKET=<your-ingestion-bucket-name>

# Vector Index Name
VECTOR_INDEX=skills-index

# Embedding Model Configuration
# ------------------------------------------------------------------------------
# Bedrock embedding model to use
EMBEDDING_MODEL_ID=amazon.titan-embed-text-v2:0

# Embedding dimensions
EMBEDDING_DIM=1024

# CORS Configuration
# ------------------------------------------------------------------------------
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# Data Paths
# ------------------------------------------------------------------------------
USER_DB_PATH=data/user_db.json

# Search Configuration
# ------------------------------------------------------------------------------
# Number of skills to retrieve from vector search
TOP_K_SKILLS=20

# Minimum similarity threshold
MIN_SIMILARITY=0.35

# Scoring Configuration - Two-Dimensional Algorithm
# ------------------------------------------------------------------------------
# Note: Rating multipliers are defined in scoring_algorithm.py
# Values: BEGINNER=1.0, INTERMEDIATE=3.0, ADVANCED=6.0

# Score Buckets (thresholds for display scores)
# ------------------------------------------------------------------------------
EXCELLENT_MIN_SCORE=80
STRONG_MIN_SCORE=60
GOOD_MIN_SCORE=40

# Display Configuration
# ------------------------------------------------------------------------------
TOP_USERS_COUNT=5
USERS_PER_PAGE=10
